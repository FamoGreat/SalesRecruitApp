// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesRecruitApp.Data;

#nullable disable

namespace SalesRecruitApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240909143313_ProductUpadate")]
    partial class ProductUpadate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesRecruitApp.Models.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductBuddleId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductBuddleId");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("SalesRecruitApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductBuddleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductBuddleId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SalesRecruitApp.Models.ProductBuddle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Highlights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsageInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductBuddles");
                });

            modelBuilder.Entity("SalesRecruitApp.Models.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductBuddleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductBuddleId");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("SalesRecruitApp.Models.FAQ", b =>
                {
                    b.HasOne("SalesRecruitApp.Models.ProductBuddle", "ProductBuddle")
                        .WithMany("FAQs")
                        .HasForeignKey("ProductBuddleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductBuddle");
                });

            modelBuilder.Entity("SalesRecruitApp.Models.Product", b =>
                {
                    b.HasOne("SalesRecruitApp.Models.ProductBuddle", "ProductBuddle")
                        .WithMany("Products")
                        .HasForeignKey("ProductBuddleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductBuddle");
                });

            modelBuilder.Entity("SalesRecruitApp.Models.Testimonial", b =>
                {
                    b.HasOne("SalesRecruitApp.Models.ProductBuddle", "ProductBuddle")
                        .WithMany("Testimonials")
                        .HasForeignKey("ProductBuddleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductBuddle");
                });

            modelBuilder.Entity("SalesRecruitApp.Models.ProductBuddle", b =>
                {
                    b.Navigation("FAQs");

                    b.Navigation("Products");

                    b.Navigation("Testimonials");
                });
#pragma warning restore 612, 618
        }
    }
}
